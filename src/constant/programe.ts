export const stringOperations = [
  {
    id: 1,
    functionality: "String Length",
    javascript: '"hello".length',
    python: 'len("hello")',
    description: "Get the number of characters in a string.",
  },
  {
    id: 2,
    functionality: "Convert to Uppercase",
    javascript: '"hello".toUpperCase()',
    python: '"hello".upper()',
    description: "Convert all characters to uppercase.",
  },
  {
    id: 3,
    functionality: "Convert to Lowercase",
    javascript: '"HELLO".toLowerCase()',
    python: '"HELLO".lower()',
    description: "Convert all characters to lowercase.",
  },
  {
    id: 4,
    functionality: "Trim Whitespaces",
    javascript: '" hello ".trim()',
    python: '" hello ".strip()',
    description: "Remove whitespace from both ends.",
  },
  {
    id: 5,
    functionality: "Substring",
    javascript: '"hello".substring(1, 3)',
    python: '"hello"[1:3]',
    description: "Extract a part of the string.",
  },
  {
    id: 6,
    functionality: "Replace Substring",
    javascript: '"hello".replace("h", "H")',
    python: '"hello".replace("h", "H")',
    description: "Replace occurrences of a substring.",
  },
  {
    id: 7,
    functionality: "Split into List/Array",
    javascript: '"a,b,c".split(",")',
    python: '"a,b,c".split(",")',
    description: "Split string into parts by a delimiter.",
  },
  {
    id: 8,
    functionality: "Join from List/Array",
    javascript: '["a", "b"].join("-")',
    python: '"-".join(["a", "b"])',
    description: "Join list/array elements into a string.",
  },
  {
    id: 9,
    functionality: "String Contains",
    javascript: '"hello".includes("e")',
    python: '"e" in "hello"',
    description: "Check if a substring exists.",
  },
  {
    id: 10,
    functionality: "Starts With",
    javascript: '"hello".startsWith("he")',
    python: '"hello".startswith("he")',
    description: "Check if string starts with a substring.",
  },
  {
    id: 11,
    functionality: "Ends With",
    javascript: '"hello".endsWith("lo")',
    python: '"hello".endswith("lo")',
    description: "Check if string ends with a substring.",
  },
];
export const arrayListOperations = [
  {
    id: 1,
    functionality: "Array/List Length",
    javascript: "[1, 2, 3].length",
    python: "len([1, 2, 3])",
    description: "Get the number of elements.",
  },
  {
    id: 2,
    functionality: "Add Element (End)",
    javascript: "[1, 2].push(3)",
    python: "[1, 2].append(3)",
    description: "Add an element at the end.",
  },
  {
    id: 3,
    functionality: "Add Element (Start)",
    javascript: "[1, 2].unshift(0)",
    python: "[1, 2].insert(0, 0)",
    description: "Add an element at the start.",
  },
  {
    id: 4,
    functionality: "Remove Element (End)",
    javascript: "[1, 2, 3].pop()",
    python: "[1, 2, 3].pop()",
    description: "Remove the last element.",
  },
  {
    id: 5,
    functionality: "Remove Element (Start)",
    javascript: "[1, 2, 3].shift()",
    python: "[1, 2, 3].pop(0)",
    description: "Remove the first element.",
  },
  {
    id: 6,
    functionality: "Concatenate Arrays/Lists",
    javascript: "[1, 2].concat([3, 4])",
    python: "[1, 2] + [3, 4]",
    description: "Combine two arrays/lists.",
  },
  {
    id: 7,
    functionality: "Slice Array/List",
    javascript: "[1, 2, 3, 4].slice(1, 3)",
    python: "[1, 2, 3, 4][1:3]",
    description: "Extract a part of the array/list.",
  },
  {
    id: 8,
    functionality: "Find Index of Element",
    javascript: "[1, 2, 3].indexOf(2)",
    python: "[1, 2, 3].index(2)",
    description: "Get the index of an element.",
  },
  {
    id: 9,
    functionality: "Array/List Contains",
    javascript: "[1, 2, 3].includes(2)",
    python: "2 in [1, 2, 3]",
    description: "Check if an element exists.",
  },
  {
    id: 10,
    functionality: "Sort Elements",
    javascript: "[3, 1, 2].sort()",
    python: "sorted([3, 1, 2])",
    description: "Sort the elements.",
  },
  {
    id: 11,
    functionality: "Reverse Elements",
    javascript: "[1, 2, 3].reverse()",
    python: "[1, 2, 3][::-1]",
    description: "Reverse the order of elements.",
  },
];
export const objectOperations = [
  {
    id: 1,
    functionality: "Create Object/Dictionary",
    javascript: "let obj = { a: 1, b: 2 }",
    python: 'obj = { "a": 1, "b": 2 }',
    description: "Create a key-value store.",
  },
  {
    id: 2,
    functionality: "Access Value",
    javascript: "obj.a or obj['a']",
    python: "obj['a']",
    description: "Get value by key.",
  },
  {
    id: 3,
    functionality: "Set Value",
    javascript: "obj.c = 3 or obj['c'] = 3",
    python: "obj['c'] = 3",
    description: "Add or update a key-value pair.",
  },
  {
    id: 4,
    functionality: "Delete Key",
    javascript: "delete obj.a",
    python: "del obj['a']",
    description: "Remove a key-value pair.",
  },
  {
    id: 5,
    functionality: "Get Keys",
    javascript: "Object.keys(obj)",
    python: "list(obj.keys())",
    description: "Get all keys.",
  },
  {
    id: 6,
    functionality: "Get Values",
    javascript: "Object.values(obj)",
    python: "list(obj.values())",
    description: "Get all values.",
  },
  {
    id: 7,
    functionality: "Get Entries",
    javascript: "Object.entries(obj)",
    python: "list(obj.items())",
    description: "Get key-value pairs as a list.",
  },
  {
    id: 8,
    functionality: "Check Key Existence",
    javascript: '"a" in obj',
    python: '"a" in obj',
    description: "Check if a key exists.",
  },
];
export const timersAndScheduling = [
  {
    id: 1,
    functionality: "Delay Execution",
    javascript: "setTimeout(() => {}, 1000)",
    python: "import time; time.sleep(1)",
    description: "Execute code after a delay.",
  },
  {
    id: 2,
    functionality: "Repeated Execution",
    javascript: "setInterval(() => {}, 1000)",
    python:
      "import threading; def repeat(): threading.Timer(1, repeat).start()",
    description: "Execute code repeatedly.",
  },
  {
    id: 3,
    functionality: "Clear Timeout/Interval",
    javascript: "clearTimeout(id) / clearInterval(id)",
    python: "Use flags or thread control",
    description: "Stop scheduled execution.",
  },
];
export const advancedFeatures = [
  {
    id: 1,
    functionality: "Promises (Async Code)",
    javascript: 'fetch("url").then(...)',
    python: 'import requests; requests.get("url")',
    description: "Handle asynchronous calls.",
  },
  {
    id: 2,
    functionality: "Async/Await",
    javascript: "async function func() { await ... }",
    python: "import asyncio; async def func(): await ...",
    description: "Syntactic sugar for async code.",
  },
  {
    id: 3,
    functionality: "Arrow Functions",
    javascript: "const add = (a, b) => a + b",
    python: "add = lambda a, b: a + b",
    description: "Concise syntax for functions.",
  },
  {
    id: 4,
    functionality: "Regular Expressions",
    javascript: "/\\d+/.test('123')",
    python: "import re; re.match(r'\\d+', '123')",
    description: "Pattern matching in strings.",
  },
  {
    id: 5,
    functionality: "Generate Random Number",
    javascript: "Math.random()",
    python: "import random; random.random()",
    description: "Generate a random float.",
  },
  {
    id: 6,
    functionality: "Multithreading",
    javascript: "Use Web Workers or Worker APIs",
    python: "import threading; thread = threading.Thread(...)",
    description: "Run code in parallel.",
  },
];
